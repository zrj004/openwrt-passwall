name: "Auto compile Passwall for FriendlyWRT"
on:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'Enable SSH session during build'
        required: false
        default: 'false'

env:
  TZ: Asia/Shanghai
  passwall_packages_repo: xiaorouji/openwrt-passwall-packages
  passwall_luci_repo: xiaorouji/openwrt-passwall
  package_names: "chinadns-ng dns2socks geoview hysteria ipt2socks microsocks naiveproxy tcping trojan-plus tuic-client shadowsocks-rust shadowsocksr-libev simple-obfs sing-box v2ray-geodata v2ray-plugin xray-core xray-plugin shadow-tls"

jobs:
  check_version:
    name: Check Passwall Latest Version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get latest Passwall version
        id: version
        run: |
          latest_commit=$(git ls-remote https://github.com/${{ env.passwall_luci_repo }}.git HEAD | awk '{print substr($1,1,7)}')
          echo "latest_commit=${latest_commit}" >> $GITHUB_OUTPUT
          echo "has_update=true" >> $GITHUB_OUTPUT

  build_friendlywrt:
    name: Build Passwall for NanoPi M4
    needs: check_version
    if: needs.check_version.outputs.has_update == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Install build dependencies
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y build-essential git wget curl python3 unzip zstd ccache libncurses-dev \
            libssl-dev libelf-dev gawk asciidoc binutils bzip2 cpio device-tree-compiler flex \
            gettext gperf help2man libtool lzip patch pkg-config rsync sudo unzip vim xz-utils zlib1g-dev

      - name: Download FriendlyWRT SDK
        run: |
          wget https://downloads.openwrt.org/releases/24.10.1/targets/rockchip/armv8/openwrt-sdk-24.10.1-rockchip-armv8_gcc-13.3.0_musl.Linux-x86_64.tar.zst
          mkdir sdk
          tar --zstd -x -f openwrt-sdk-24.10.1-rockchip-armv8_gcc-13.3.0_musl.Linux-x86_64.tar.zst -C sdk --strip-components=1
          cd sdk

      - name: Configure feeds for latest Passwall
        run: |
          cd sdk
          cat > feeds.conf.default << EOF
          src-git passwall_packages https://github.com/${{ env.passwall_packages_repo }}.git;main
          src-git passwall_luci https://github.com/${{ env.passwall_luci_repo }}.git;main
          src-git base https://github.com/openwrt/openwrt.git;openwrt-24.10
          src-git packages https://github.com/openwrt/packages.git;openwrt-24.10
          src-git luci https://github.com/openwrt/luci.git;openwrt-24.10
          src-git routing https://github.com/openwrt/routing.git;openwrt-24.10
          src-git telephony https://github.com/openwrt/telephony.git;openwrt-24.10
          EOF

          ./scripts/feeds update -a
          ./scripts/feeds install -a

          # 清理旧依赖，确保使用官方最新
          rm -rf feeds/packages/net/{xray-core,v2ray-geodata,sing-box,chinadns-ng,dns2socks,hysteria,ipt2socks,microsocks,naiveproxy,shadowsocks-libev,shadowsocks-rust,shadowsocksr-libev,simple-obfs,tcping,trojan-plus,tuic-client,v2ray-plugin,xray-plugin,geoview,shadow-tls}
          git clone https://github.com/${{ env.passwall_packages_repo }} package/passwall-packages
          rm -rf feeds/luci/applications/luci-app-passwall
          git clone https://github.com/${{ env.passwall_luci_repo }} package/passwall-luci

      - name: Configure Passwall compilation
        run: |
          cd sdk
          echo "CONFIG_ALL_NONSHARED=n" > .config
          echo "CONFIG_ALL_KMODS=n" >> .config
          echo "CONFIG_ALL=n" >> .config
          echo "CONFIG_AUTOREMOVE=n" >> .config
          echo "CONFIG_SIGNED_PACKAGES=n" >> .config
          echo "CONFIG_LUCI_LANG_zh_Hans=y" >> .config
          echo "CONFIG_PACKAGE_luci-app-passwall=m" >> .config
          # 其他核心 package
          for pkg in ${{ env.package_names }}; do
              echo "CONFIG_PACKAGE_$pkg=m" >> .config
          done
          make defconfig

      - name: Compile Passwall packages
        run: |
          cd sdk
          for pkg in ${{ env.package_names }} luci-app-passwall; do
              make package/$pkg/{clean,compile} -j$(nproc) V=s
          done

      - name: Collect IPKs
        run: |
          cd sdk
          mkdir -p upload
          zip -r upload/passwall_ipk_nanopi_m4.zip bin/packages/aarch64_generic/*

      - name: Upload IPKs to GitHub Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{needs.check_version.outputs.latest_commit}}
          files: sdk/upload/passwall_ipk_nanopi_m4.zip
          body: "Auto-compiled Passwall IPKs for FriendlyWRT NanoPi M4"
